package com.future.dao4ora.idao;

import com.future.dao4ora.po.GeOrder;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface GeOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GE_ORDER
     *
     * @mbggenerated
     */
    @Delete({
        "delete from GE_ORDER",
        "where ORDERNO = #{orderno,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GE_ORDER
     *
     * @mbggenerated
     */
    @Insert({
        "insert into GE_ORDER (ORDERNO, CIRCPAYMENTNO, ",
        "USERID, CURRENCY, ",
        "ORDERAMOUNT, PAYTIME, ",
        "PAYSTATUS, PAYWAY, ",
        "INVOICEFLAG, INVOICETITLE, ",
        "SUBMITTIME, STATUS, ",
        "GATEWAYRNO, BANKORDERNO, ",
        "SURCHARGE, FLOWNO, ",
        "REFUNDMENTFLAG, CREATEDATE, ",
        "RECIPIENTNAME, RECIPIENTMOBILE, ",
        "ZIPCODE, RECIPIENTADDRESS, ",
        "SENDDATE, FLAG, ",
        "DISTRIBUTIONSTATUS, USERTYPE, ",
        "DATASOURSE, ENCODEMSG, ",
        "SIGNMSG, SYSTEMSSN, ",
        "AGENTIDENTITYCODE, PAYMENTPLATFORM, ",
        "PAYMENTSOURCE, TBORDERID, ",
        "PAYORDERID, CHECKPAYNO, ",
        "ACCOUNTDATE, ALIPAYBUYERACCOUNT, ",
        "ALIPAYBUYERID, ESBRESPONSETIME, ",
        "COMMUNICATIONMODE, APPTIME, ",
        "EXTRAFEE, SUMPREM, ",
        "SALETYPE, PROPOSALVALIDATECODE, ",
        "CHARGENO, RELATIONORDERNO)",
        "values (#{orderno,jdbcType=VARCHAR}, #{circpaymentno,jdbcType=VARCHAR}, ",
        "#{userid,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, ",
        "#{orderamount,jdbcType=NUMERIC}, #{paytime,jdbcType=TIMESTAMP}, ",
        "#{paystatus,jdbcType=VARCHAR}, #{payway,jdbcType=VARCHAR}, ",
        "#{invoiceflag,jdbcType=VARCHAR}, #{invoicetitle,jdbcType=VARCHAR}, ",
        "#{submittime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, ",
        "#{gatewayrno,jdbcType=VARCHAR}, #{bankorderno,jdbcType=VARCHAR}, ",
        "#{surcharge,jdbcType=NUMERIC}, #{flowno,jdbcType=VARCHAR}, ",
        "#{refundmentflag,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, ",
        "#{recipientname,jdbcType=VARCHAR}, #{recipientmobile,jdbcType=VARCHAR}, ",
        "#{zipcode,jdbcType=VARCHAR}, #{recipientaddress,jdbcType=VARCHAR}, ",
        "#{senddate,jdbcType=TIMESTAMP}, #{flag,jdbcType=VARCHAR}, ",
        "#{distributionstatus,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR}, ",
        "#{datasourse,jdbcType=VARCHAR}, #{encodemsg,jdbcType=VARCHAR}, ",
        "#{signmsg,jdbcType=VARCHAR}, #{systemssn,jdbcType=VARCHAR}, ",
        "#{agentidentitycode,jdbcType=VARCHAR}, #{paymentplatform,jdbcType=VARCHAR}, ",
        "#{paymentsource,jdbcType=VARCHAR}, #{tborderid,jdbcType=VARCHAR}, ",
        "#{payorderid,jdbcType=VARCHAR}, #{checkpayno,jdbcType=VARCHAR}, ",
        "#{accountdate,jdbcType=TIMESTAMP}, #{alipaybuyeraccount,jdbcType=VARCHAR}, ",
        "#{alipaybuyerid,jdbcType=VARCHAR}, #{esbresponsetime,jdbcType=TIMESTAMP}, ",
        "#{communicationmode,jdbcType=VARCHAR}, #{apptime,jdbcType=TIMESTAMP}, ",
        "#{extrafee,jdbcType=NUMERIC}, #{sumprem,jdbcType=NUMERIC}, ",
        "#{saletype,jdbcType=VARCHAR}, #{proposalvalidatecode,jdbcType=VARCHAR}, ",
        "#{chargeno,jdbcType=VARCHAR}, #{relationorderno,jdbcType=VARCHAR})"
    })
    int insert(GeOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GE_ORDER
     *
     * @mbggenerated
     */
    int insertSelective(GeOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GE_ORDER
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ORDERNO, CIRCPAYMENTNO, USERID, CURRENCY, ORDERAMOUNT, PAYTIME, PAYSTATUS, PAYWAY, ",
        "INVOICEFLAG, INVOICETITLE, SUBMITTIME, STATUS, GATEWAYRNO, BANKORDERNO, SURCHARGE, ",
        "FLOWNO, REFUNDMENTFLAG, CREATEDATE, RECIPIENTNAME, RECIPIENTMOBILE, ZIPCODE, ",
        "RECIPIENTADDRESS, SENDDATE, FLAG, DISTRIBUTIONSTATUS, USERTYPE, DATASOURSE, ",
        "ENCODEMSG, SIGNMSG, SYSTEMSSN, AGENTIDENTITYCODE, PAYMENTPLATFORM, PAYMENTSOURCE, ",
        "TBORDERID, PAYORDERID, CHECKPAYNO, ACCOUNTDATE, ALIPAYBUYERACCOUNT, ALIPAYBUYERID, ",
        "ESBRESPONSETIME, COMMUNICATIONMODE, APPTIME, EXTRAFEE, SUMPREM, SALETYPE, PROPOSALVALIDATECODE, ",
        "CHARGENO, RELATIONORDERNO",
        "from GE_ORDER",
        "where ORDERNO = #{orderno,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    GeOrder selectByPrimaryKey(String orderno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GE_ORDER
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(GeOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table GE_ORDER
     *
     * @mbggenerated
     */
    @Update({
        "update GE_ORDER",
        "set CIRCPAYMENTNO = #{circpaymentno,jdbcType=VARCHAR},",
          "USERID = #{userid,jdbcType=VARCHAR},",
          "CURRENCY = #{currency,jdbcType=VARCHAR},",
          "ORDERAMOUNT = #{orderamount,jdbcType=NUMERIC},",
          "PAYTIME = #{paytime,jdbcType=TIMESTAMP},",
          "PAYSTATUS = #{paystatus,jdbcType=VARCHAR},",
          "PAYWAY = #{payway,jdbcType=VARCHAR},",
          "INVOICEFLAG = #{invoiceflag,jdbcType=VARCHAR},",
          "INVOICETITLE = #{invoicetitle,jdbcType=VARCHAR},",
          "SUBMITTIME = #{submittime,jdbcType=TIMESTAMP},",
          "STATUS = #{status,jdbcType=VARCHAR},",
          "GATEWAYRNO = #{gatewayrno,jdbcType=VARCHAR},",
          "BANKORDERNO = #{bankorderno,jdbcType=VARCHAR},",
          "SURCHARGE = #{surcharge,jdbcType=NUMERIC},",
          "FLOWNO = #{flowno,jdbcType=VARCHAR},",
          "REFUNDMENTFLAG = #{refundmentflag,jdbcType=VARCHAR},",
          "CREATEDATE = #{createdate,jdbcType=TIMESTAMP},",
          "RECIPIENTNAME = #{recipientname,jdbcType=VARCHAR},",
          "RECIPIENTMOBILE = #{recipientmobile,jdbcType=VARCHAR},",
          "ZIPCODE = #{zipcode,jdbcType=VARCHAR},",
          "RECIPIENTADDRESS = #{recipientaddress,jdbcType=VARCHAR},",
          "SENDDATE = #{senddate,jdbcType=TIMESTAMP},",
          "FLAG = #{flag,jdbcType=VARCHAR},",
          "DISTRIBUTIONSTATUS = #{distributionstatus,jdbcType=VARCHAR},",
          "USERTYPE = #{usertype,jdbcType=VARCHAR},",
          "DATASOURSE = #{datasourse,jdbcType=VARCHAR},",
          "ENCODEMSG = #{encodemsg,jdbcType=VARCHAR},",
          "SIGNMSG = #{signmsg,jdbcType=VARCHAR},",
          "SYSTEMSSN = #{systemssn,jdbcType=VARCHAR},",
          "AGENTIDENTITYCODE = #{agentidentitycode,jdbcType=VARCHAR},",
          "PAYMENTPLATFORM = #{paymentplatform,jdbcType=VARCHAR},",
          "PAYMENTSOURCE = #{paymentsource,jdbcType=VARCHAR},",
          "TBORDERID = #{tborderid,jdbcType=VARCHAR},",
          "PAYORDERID = #{payorderid,jdbcType=VARCHAR},",
          "CHECKPAYNO = #{checkpayno,jdbcType=VARCHAR},",
          "ACCOUNTDATE = #{accountdate,jdbcType=TIMESTAMP},",
          "ALIPAYBUYERACCOUNT = #{alipaybuyeraccount,jdbcType=VARCHAR},",
          "ALIPAYBUYERID = #{alipaybuyerid,jdbcType=VARCHAR},",
          "ESBRESPONSETIME = #{esbresponsetime,jdbcType=TIMESTAMP},",
          "COMMUNICATIONMODE = #{communicationmode,jdbcType=VARCHAR},",
          "APPTIME = #{apptime,jdbcType=TIMESTAMP},",
          "EXTRAFEE = #{extrafee,jdbcType=NUMERIC},",
          "SUMPREM = #{sumprem,jdbcType=NUMERIC},",
          "SALETYPE = #{saletype,jdbcType=VARCHAR},",
          "PROPOSALVALIDATECODE = #{proposalvalidatecode,jdbcType=VARCHAR},",
          "CHARGENO = #{chargeno,jdbcType=VARCHAR},",
          "RELATIONORDERNO = #{relationorderno,jdbcType=VARCHAR}",
        "where ORDERNO = #{orderno,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(GeOrder record);
}