package com.future.dao.idao;

import com.future.dao.po.EndorsementEndorse;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface EndorsementEndorseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ENDORSEMENT_ENDORSE
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ENDORSEMENT_ENDORSE",
        "where PROPOSALSID = #{proposalsid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String proposalsid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ENDORSEMENT_ENDORSE
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ENDORSEMENT_ENDORSE (PROPOSALSID, BATCHID, ",
        "POLICYNO, BRANCHID, ",
        "AMOUNT, FINISHTINME, ",
        "OUTPOLICYNO, EXTENDFLOW, ",
        "TYPE, CREATESTAMP, ",
        "LASTUPDATESTAMP, NUM, ",
        "GATEWAYTIME, STATUS, ",
        "GATEWAYFLOW, RETURNCODE, ",
        "REASON, STATE)",
        "values (#{proposalsid,jdbcType=VARCHAR}, #{batchid,jdbcType=VARCHAR}, ",
        "#{policyno,jdbcType=VARCHAR}, #{branchid,jdbcType=VARCHAR}, ",
        "#{amount,jdbcType=NUMERIC}, #{finishtinme,jdbcType=TIMESTAMP}, ",
        "#{outpolicyno,jdbcType=VARCHAR}, #{extendflow,jdbcType=VARCHAR}, ",
        "#{type,jdbcType=VARCHAR}, #{createstamp,jdbcType=TIMESTAMP}, ",
        "#{lastupdatestamp,jdbcType=TIMESTAMP}, #{num,jdbcType=NUMERIC}, ",
        "#{gatewaytime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, ",
        "#{gatewayflow,jdbcType=VARCHAR}, #{returncode,jdbcType=VARCHAR}, ",
        "#{reason,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})"
    })
    int insert(EndorsementEndorse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ENDORSEMENT_ENDORSE
     *
     * @mbggenerated
     */
    int insertSelective(EndorsementEndorse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ENDORSEMENT_ENDORSE
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "PROPOSALSID, BATCHID, POLICYNO, BRANCHID, AMOUNT, FINISHTINME, OUTPOLICYNO, ",
        "EXTENDFLOW, TYPE, CREATESTAMP, LASTUPDATESTAMP, NUM, GATEWAYTIME, STATUS, GATEWAYFLOW, ",
        "RETURNCODE, REASON, STATE",
        "from ENDORSEMENT_ENDORSE",
        "where PROPOSALSID = #{proposalsid,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    EndorsementEndorse selectByPrimaryKey(String proposalsid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ENDORSEMENT_ENDORSE
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(EndorsementEndorse record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ENDORSEMENT_ENDORSE
     *
     * @mbggenerated
     */
    @Update({
        "update ENDORSEMENT_ENDORSE",
        "set BATCHID = #{batchid,jdbcType=VARCHAR},",
          "POLICYNO = #{policyno,jdbcType=VARCHAR},",
          "BRANCHID = #{branchid,jdbcType=VARCHAR},",
          "AMOUNT = #{amount,jdbcType=NUMERIC},",
          "FINISHTINME = #{finishtinme,jdbcType=TIMESTAMP},",
          "OUTPOLICYNO = #{outpolicyno,jdbcType=VARCHAR},",
          "EXTENDFLOW = #{extendflow,jdbcType=VARCHAR},",
          "TYPE = #{type,jdbcType=VARCHAR},",
          "CREATESTAMP = #{createstamp,jdbcType=TIMESTAMP},",
          "LASTUPDATESTAMP = #{lastupdatestamp,jdbcType=TIMESTAMP},",
          "NUM = #{num,jdbcType=NUMERIC},",
          "GATEWAYTIME = #{gatewaytime,jdbcType=TIMESTAMP},",
          "STATUS = #{status,jdbcType=VARCHAR},",
          "GATEWAYFLOW = #{gatewayflow,jdbcType=VARCHAR},",
          "RETURNCODE = #{returncode,jdbcType=VARCHAR},",
          "REASON = #{reason,jdbcType=VARCHAR},",
          "STATE = #{state,jdbcType=VARCHAR}",
        "where PROPOSALSID = #{proposalsid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(EndorsementEndorse record);
}